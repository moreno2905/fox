# -*- coding: utf-8 -*-
"""apipostgresql.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W2XqlQ_aYrSy7IyTzbj6jb17zWXZZije
"""

from flask import Flask, request, jsonify
from sqlalchemy import create_engine
import pandas as pd
import urllib.parse

# Parámetros de conexión Sales-Operations
dbname = 'fox-track'
user = 'data2'
password = 'JM%vA0hf!pc'
encode_password2 = urllib.parse.quote_plus(password)
host = '162.243.164.24'
port= '5432'  # El puerto por defecto es 543

# Crear la cadena de conexión
connection = f'postgresql+psycopg2://{user}:{encode_password2}@{host}:{port}/{dbname}'

# Crear el motor de conexión
engine = create_engine(connection)

# Iniciar la app Flask
app = Flask(__name__)

@app.route('/query', methods=['GET'])
def query_postgres():
    try:
        # Aquí puedes poner cualquier query
        sql = "SELECT COUNT(CASE WHEN is_lost = false AND owner_id IS NOT NULL THEN 1 END) AS total_online, COUNT(CASE WHEN is_lost = true AND lost_date IS NOT NULL AND owner_id IS NOT NULL THEN 1 END) AS total_lost FROM leads_client"

        # Ejecutar el query usando pandas
        df = pd.read_sql(sql, engine)

        # Convertir el DataFrame a JSON
        result = df.to_dict(orient='records')
        return jsonify(result)

    except Exception as e:
        return jsonify({"error": str(e)})

if __name__ == '__main__':
    app.run(port=5000)
